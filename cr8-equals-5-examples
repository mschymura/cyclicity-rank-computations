###############################
extremal examples for cr_e(8)=5
###############################

isempty = lambda S : S.integral_points_count() == dim(S) + 1

colsB = [[1,1,0],[1,0,1],[0,1,1],[1,2,0],[2,1,0],[1,0,2],[2,0,1],[0,1,2],[0,2,1],[1,1,1],[1,1,2],[1,2,1],[2,1,1],[1,2,2],[2,1,2],[2,2,1],[2,2,2]]
colsB4 = [[1,1,0,0],[1,0,1,0],[1,0,0,1],[0,1,1,0],[0,1,0,1],[0,0,1,1],[1,2,0,0],[1,0,2,0],[1,0,0,2],[0,1,2,0],[0,1,0,2],[0,0,1,2],[2,1,0,0],[2,0,1,0],[2,0,0,1],[0,2,1,0],[0,2,0,1],[0,0,2,1],[1,1,1,0],[1,1,0,1],[1,0,1,1],[0,1,1,1],[1,1,0,2],[1,0,1,2],[0,1,1,2],[1,2,0,1],[1,0,2,1],[0,1,2,1],[2,1,0,1],[2,0,1,1],[0,2,1,1],[1,2,0,2],[1,0,2,2],[0,1,2,2],[2,1,0,2],[2,0,1,2],[0,2,1,2],[2,2,0,1],[2,0,2,1],[0,2,2,1],[2,2,0,2],[2,0,2,2],[0,2,2,2],[1,1,1,1],[1,1,1,2],[1,1,2,1],[1,2,1,1],[2,1,1,1],[1,1,2,2],[1,2,1,2],[2,1,1,2],[1,2,2,1],[2,1,2,1],[2,2,1,1],[1,2,2,2],[2,1,2,2],[2,2,1,2],[2,2,2,1],[2,2,2,2]]

C = lambda r : Combinations(colsB,r)
C4 = lambda r : Combinations(colsB4,r)

simplBpart = lambda B,p,r : seq(B[i] + seq(p if j==i else 0 for j in range(r)) for i in range(r))
simplEpart = lambda d,r : seq(seq(1 if j==i-1 else 0 for j in range(d)) for i in range(d-r+1))
simplM = lambda B,p,d,r : simplEpart(d,r) + simplBpart(B,p,r)

L = []
for B in C(5):
  S = Polyhedron(simplM(B,3,8,5))
  if isempty(S) : L.append(B)

resulting 18 B-matrices are: (ca. 30min computer time)

L = [[[1, 1, 0], [1, 0, 1], [2, 1, 1], [2, 1, 2], [2, 2, 1]],
 [[1, 1, 0], [0, 1, 1], [1, 2, 1], [1, 2, 2], [2, 2, 1]],
 [[1, 1, 0], [1, 0, 2], [0, 1, 2], [1, 2, 2], [2, 1, 2]],
 [[1, 1, 0], [1, 0, 2], [0, 2, 1], [1, 1, 1], [2, 1, 1]],
 [[1, 1, 0], [2, 0, 1], [0, 1, 2], [1, 1, 1], [1, 2, 1]],
 [[1, 0, 1], [0, 1, 1], [1, 1, 2], [1, 2, 2], [2, 1, 2]],
 [[1, 0, 1], [1, 2, 0], [0, 1, 2], [1, 1, 1], [2, 1, 1]],
 [[1, 0, 1], [1, 2, 0], [0, 2, 1], [1, 2, 2], [2, 2, 1]],
 [[1, 0, 1], [2, 1, 0], [0, 2, 1], [1, 1, 1], [1, 1, 2]],
 [[0, 1, 1], [1, 2, 0], [2, 0, 1], [1, 1, 1], [1, 1, 2]],
 [[0, 1, 1], [2, 1, 0], [1, 0, 2], [1, 1, 1], [1, 2, 1]],
 [[0, 1, 1], [2, 1, 0], [2, 0, 1], [2, 1, 2], [2, 2, 1]],
 [[1, 2, 0], [2, 0, 1], [1, 2, 1], [2, 2, 1], [2, 2, 2]],
 [[1, 2, 0], [0, 1, 2], [1, 1, 2], [1, 2, 2], [2, 2, 2]],
 [[2, 1, 0], [1, 0, 2], [1, 1, 2], [2, 1, 2], [2, 2, 2]],
 [[2, 1, 0], [0, 2, 1], [2, 1, 1], [2, 2, 1], [2, 2, 2]],
 [[1, 0, 2], [0, 2, 1], [1, 2, 1], [1, 2, 2], [2, 2, 2]],
 [[2, 0, 1], [0, 1, 2], [2, 1, 1], [2, 1, 2], [2, 2, 2]]]

let's sort them out by unimodular equivalence:

NFs = []
noneqList = []
for M in L :
  S = Polyhedron(simplM(B,3,8,5))
  Snf = S.lattice_polytope().normal_form(algorithm='palp_native')
  if Snf not in NFs :
    NFs.append(Snf)
    noneqList.append(M)

turns out that the extremal example is unique! (ca. 1h computer time to check 18 normal forms)

noneqList
[[[1, 1, 0], [1, 0, 1], [2, 1, 1], [2, 1, 2], [2, 2, 1]]]

sage: NFs
[M(0, 0, 0, 0, 0, 0, 0, 0),
 M(1, 0, 0, 0, 0, 0, 0, 0),
 M(0, 1, 0, 0, 0, 0, 0, 0),
 M(0, 0, 1, 0, 0, 0, 0, 0),
 M(0, 0, 2, 3, 0, 0, 0, 0),
 M(0, 1, 1, 0, 3, 0, 0, 0),
 M(1, 0, 1, 0, 0, 3, 0, 0),
 M(1, 1, 0, 0, 0, 0, 3, 0),
 M(1, 1, 1, 0, 0, 0, 0, 3)
 in 8-d lattice M]
  

########################################
computer check that crk_3(9) = 5 through
########################################

L = []
for B in C(6):
  S = Polyhedron(simplM(B,3,9,6))
  if isempty(S) : L.append(B)

resulting list is: (ca. 1h30min computer time)

L = [] as it should be


############################################
extremal examples for attaining crk_3(9) = 5
############################################

this would need to check binomial(59,5) = 5006386 examples.. which are too many.. (about 1month of computer time)

also, crk_2(9) = 5 as well

L = []
for B in C4(5):
  S = Polyhedron(simplM(B,3,9,5))
  if isempty(S) : L.append(B)




